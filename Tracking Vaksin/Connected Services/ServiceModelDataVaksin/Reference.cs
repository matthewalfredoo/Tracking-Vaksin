//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceModelDataVaksin
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceModelDataVaksin.IServiceModelDataVaksin")]
    public interface IServiceModelDataVaksin
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/getAllDataVaksin", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/getAllDataVaksinResponse")]
        ServiceModelDataVaksin.getAllDataVaksinResponse getAllDataVaksin(ServiceModelDataVaksin.getAllDataVaksinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/getAllDataVaksin", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/getAllDataVaksinResponse")]
        System.Threading.Tasks.Task<ServiceModelDataVaksin.getAllDataVaksinResponse> getAllDataVaksinAsync(ServiceModelDataVaksin.getAllDataVaksinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/getDataVaksinByID", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/getDataVaksinByIDResponse")]
        ServiceModelDataVaksin.getDataVaksinByIDResponse getDataVaksinByID(ServiceModelDataVaksin.getDataVaksinByIDRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/getDataVaksinByID", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/getDataVaksinByIDResponse")]
        System.Threading.Tasks.Task<ServiceModelDataVaksin.getDataVaksinByIDResponse> getDataVaksinByIDAsync(ServiceModelDataVaksin.getDataVaksinByIDRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/createDataVaksin", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/createDataVaksinResponse")]
        ServiceModelDataVaksin.createDataVaksinResponse createDataVaksin(ServiceModelDataVaksin.createDataVaksinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/createDataVaksin", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/createDataVaksinResponse")]
        System.Threading.Tasks.Task<ServiceModelDataVaksin.createDataVaksinResponse> createDataVaksinAsync(ServiceModelDataVaksin.createDataVaksinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/updateDataVaksin", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/updateDataVaksinResponse")]
        ServiceModelDataVaksin.updateDataVaksinResponse updateDataVaksin(ServiceModelDataVaksin.updateDataVaksinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/updateDataVaksin", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/updateDataVaksinResponse")]
        System.Threading.Tasks.Task<ServiceModelDataVaksin.updateDataVaksinResponse> updateDataVaksinAsync(ServiceModelDataVaksin.updateDataVaksinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/deleteDataVaksin", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/deleteDataVaksinResponse")]
        ServiceModelDataVaksin.deleteDataVaksinResponse deleteDataVaksin(ServiceModelDataVaksin.deleteDataVaksinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceModelDataVaksin/deleteDataVaksin", ReplyAction="http://tempuri.org/IServiceModelDataVaksin/deleteDataVaksinResponse")]
        System.Threading.Tasks.Task<ServiceModelDataVaksin.deleteDataVaksinResponse> deleteDataVaksinAsync(ServiceModelDataVaksin.deleteDataVaksinRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllDataVaksin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllDataVaksinRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<Tracking_Vaksin_Services.DataVaksinS> dataVaksinS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public getAllDataVaksinRequest()
        {
        }
        
        public getAllDataVaksinRequest(System.Collections.Generic.List<Tracking_Vaksin_Services.DataVaksinS> dataVaksinS, int StatusCode, string Message)
        {
            this.dataVaksinS = dataVaksinS;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getAllDataVaksinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getAllDataVaksinResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getAllDataVaksinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Collections.Generic.List<Tracking_Vaksin_Services.DataVaksinS> dataVaksinS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string Message;
        
        public getAllDataVaksinResponse()
        {
        }
        
        public getAllDataVaksinResponse(bool getAllDataVaksinResult, System.Collections.Generic.List<Tracking_Vaksin_Services.DataVaksinS> dataVaksinS, int StatusCode, string Message)
        {
            this.getAllDataVaksinResult = getAllDataVaksinResult;
            this.dataVaksinS = dataVaksinS;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDataVaksinByID", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDataVaksinByIDRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Tracking_Vaksin_Services.DataVaksinS dataVaksinS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string Message;
        
        public getDataVaksinByIDRequest()
        {
        }
        
        public getDataVaksinByIDRequest(Tracking_Vaksin_Services.DataVaksinS dataVaksinS, int id, int StatusCode, string Message)
        {
            this.dataVaksinS = dataVaksinS;
            this.id = id;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getDataVaksinByIDResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getDataVaksinByIDResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool getDataVaksinByIDResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public Tracking_Vaksin_Services.DataVaksinS dataVaksinS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public string Message;
        
        public getDataVaksinByIDResponse()
        {
        }
        
        public getDataVaksinByIDResponse(bool getDataVaksinByIDResult, Tracking_Vaksin_Services.DataVaksinS dataVaksinS, int StatusCode, string Message)
        {
            this.getDataVaksinByIDResult = getDataVaksinByIDResult;
            this.dataVaksinS = dataVaksinS;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createDataVaksin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class createDataVaksinRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Tracking_Vaksin_Services.DataVaksinS dataVaksinS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public createDataVaksinRequest()
        {
        }
        
        public createDataVaksinRequest(Tracking_Vaksin_Services.DataVaksinS dataVaksinS, int StatusCode, string Message)
        {
            this.dataVaksinS = dataVaksinS;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="createDataVaksinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class createDataVaksinResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool createDataVaksinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public createDataVaksinResponse()
        {
        }
        
        public createDataVaksinResponse(bool createDataVaksinResult, int StatusCode, string Message)
        {
            this.createDataVaksinResult = createDataVaksinResult;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateDataVaksin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class updateDataVaksinRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Tracking_Vaksin_Services.DataVaksinS dataVaksinS;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public updateDataVaksinRequest()
        {
        }
        
        public updateDataVaksinRequest(Tracking_Vaksin_Services.DataVaksinS dataVaksinS, int StatusCode, string Message)
        {
            this.dataVaksinS = dataVaksinS;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="updateDataVaksinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class updateDataVaksinResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool updateDataVaksinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public updateDataVaksinResponse()
        {
        }
        
        public updateDataVaksinResponse(bool updateDataVaksinResult, int StatusCode, string Message)
        {
            this.updateDataVaksinResult = updateDataVaksinResult;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteDataVaksin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class deleteDataVaksinRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int id;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public deleteDataVaksinRequest()
        {
        }
        
        public deleteDataVaksinRequest(int id, int StatusCode, string Message)
        {
            this.id = id;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="deleteDataVaksinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class deleteDataVaksinResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool deleteDataVaksinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public deleteDataVaksinResponse()
        {
        }
        
        public deleteDataVaksinResponse(bool deleteDataVaksinResult, int StatusCode, string Message)
        {
            this.deleteDataVaksinResult = deleteDataVaksinResult;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IServiceModelDataVaksinChannel : ServiceModelDataVaksin.IServiceModelDataVaksin, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ServiceModelDataVaksinClient : System.ServiceModel.ClientBase<ServiceModelDataVaksin.IServiceModelDataVaksin>, ServiceModelDataVaksin.IServiceModelDataVaksin
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceModelDataVaksinClient() : 
                base(ServiceModelDataVaksinClient.GetDefaultBinding(), ServiceModelDataVaksinClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceModelDataVaksin.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceModelDataVaksinClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceModelDataVaksinClient.GetBindingForEndpoint(endpointConfiguration), ServiceModelDataVaksinClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceModelDataVaksinClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceModelDataVaksinClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceModelDataVaksinClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceModelDataVaksinClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceModelDataVaksinClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceModelDataVaksin.getAllDataVaksinResponse ServiceModelDataVaksin.IServiceModelDataVaksin.getAllDataVaksin(ServiceModelDataVaksin.getAllDataVaksinRequest request)
        {
            return base.Channel.getAllDataVaksin(request);
        }
        
        public bool getAllDataVaksin(ref System.Collections.Generic.List<Tracking_Vaksin_Services.DataVaksinS> dataVaksinS, ref int StatusCode, ref string Message)
        {
            ServiceModelDataVaksin.getAllDataVaksinRequest inValue = new ServiceModelDataVaksin.getAllDataVaksinRequest();
            inValue.dataVaksinS = dataVaksinS;
            inValue.StatusCode = StatusCode;
            inValue.Message = Message;
            ServiceModelDataVaksin.getAllDataVaksinResponse retVal = ((ServiceModelDataVaksin.IServiceModelDataVaksin)(this)).getAllDataVaksin(inValue);
            dataVaksinS = retVal.dataVaksinS;
            StatusCode = retVal.StatusCode;
            Message = retVal.Message;
            return retVal.getAllDataVaksinResult;
        }
        
        public System.Threading.Tasks.Task<ServiceModelDataVaksin.getAllDataVaksinResponse> getAllDataVaksinAsync(ServiceModelDataVaksin.getAllDataVaksinRequest request)
        {
            return base.Channel.getAllDataVaksinAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceModelDataVaksin.getDataVaksinByIDResponse ServiceModelDataVaksin.IServiceModelDataVaksin.getDataVaksinByID(ServiceModelDataVaksin.getDataVaksinByIDRequest request)
        {
            return base.Channel.getDataVaksinByID(request);
        }
        
        public bool getDataVaksinByID(ref Tracking_Vaksin_Services.DataVaksinS dataVaksinS, int id, ref int StatusCode, ref string Message)
        {
            ServiceModelDataVaksin.getDataVaksinByIDRequest inValue = new ServiceModelDataVaksin.getDataVaksinByIDRequest();
            inValue.dataVaksinS = dataVaksinS;
            inValue.id = id;
            inValue.StatusCode = StatusCode;
            inValue.Message = Message;
            ServiceModelDataVaksin.getDataVaksinByIDResponse retVal = ((ServiceModelDataVaksin.IServiceModelDataVaksin)(this)).getDataVaksinByID(inValue);
            dataVaksinS = retVal.dataVaksinS;
            StatusCode = retVal.StatusCode;
            Message = retVal.Message;
            return retVal.getDataVaksinByIDResult;
        }
        
        public System.Threading.Tasks.Task<ServiceModelDataVaksin.getDataVaksinByIDResponse> getDataVaksinByIDAsync(ServiceModelDataVaksin.getDataVaksinByIDRequest request)
        {
            return base.Channel.getDataVaksinByIDAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceModelDataVaksin.createDataVaksinResponse ServiceModelDataVaksin.IServiceModelDataVaksin.createDataVaksin(ServiceModelDataVaksin.createDataVaksinRequest request)
        {
            return base.Channel.createDataVaksin(request);
        }
        
        public bool createDataVaksin(Tracking_Vaksin_Services.DataVaksinS dataVaksinS, ref int StatusCode, ref string Message)
        {
            ServiceModelDataVaksin.createDataVaksinRequest inValue = new ServiceModelDataVaksin.createDataVaksinRequest();
            inValue.dataVaksinS = dataVaksinS;
            inValue.StatusCode = StatusCode;
            inValue.Message = Message;
            ServiceModelDataVaksin.createDataVaksinResponse retVal = ((ServiceModelDataVaksin.IServiceModelDataVaksin)(this)).createDataVaksin(inValue);
            StatusCode = retVal.StatusCode;
            Message = retVal.Message;
            return retVal.createDataVaksinResult;
        }
        
        public System.Threading.Tasks.Task<ServiceModelDataVaksin.createDataVaksinResponse> createDataVaksinAsync(ServiceModelDataVaksin.createDataVaksinRequest request)
        {
            return base.Channel.createDataVaksinAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceModelDataVaksin.updateDataVaksinResponse ServiceModelDataVaksin.IServiceModelDataVaksin.updateDataVaksin(ServiceModelDataVaksin.updateDataVaksinRequest request)
        {
            return base.Channel.updateDataVaksin(request);
        }
        
        public bool updateDataVaksin(Tracking_Vaksin_Services.DataVaksinS dataVaksinS, ref int StatusCode, ref string Message)
        {
            ServiceModelDataVaksin.updateDataVaksinRequest inValue = new ServiceModelDataVaksin.updateDataVaksinRequest();
            inValue.dataVaksinS = dataVaksinS;
            inValue.StatusCode = StatusCode;
            inValue.Message = Message;
            ServiceModelDataVaksin.updateDataVaksinResponse retVal = ((ServiceModelDataVaksin.IServiceModelDataVaksin)(this)).updateDataVaksin(inValue);
            StatusCode = retVal.StatusCode;
            Message = retVal.Message;
            return retVal.updateDataVaksinResult;
        }
        
        public System.Threading.Tasks.Task<ServiceModelDataVaksin.updateDataVaksinResponse> updateDataVaksinAsync(ServiceModelDataVaksin.updateDataVaksinRequest request)
        {
            return base.Channel.updateDataVaksinAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceModelDataVaksin.deleteDataVaksinResponse ServiceModelDataVaksin.IServiceModelDataVaksin.deleteDataVaksin(ServiceModelDataVaksin.deleteDataVaksinRequest request)
        {
            return base.Channel.deleteDataVaksin(request);
        }
        
        public bool deleteDataVaksin(int id, ref int StatusCode, ref string Message)
        {
            ServiceModelDataVaksin.deleteDataVaksinRequest inValue = new ServiceModelDataVaksin.deleteDataVaksinRequest();
            inValue.id = id;
            inValue.StatusCode = StatusCode;
            inValue.Message = Message;
            ServiceModelDataVaksin.deleteDataVaksinResponse retVal = ((ServiceModelDataVaksin.IServiceModelDataVaksin)(this)).deleteDataVaksin(inValue);
            StatusCode = retVal.StatusCode;
            Message = retVal.Message;
            return retVal.deleteDataVaksinResult;
        }
        
        public System.Threading.Tasks.Task<ServiceModelDataVaksin.deleteDataVaksinResponse> deleteDataVaksinAsync(ServiceModelDataVaksin.deleteDataVaksinRequest request)
        {
            return base.Channel.deleteDataVaksinAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceModelDataVaksin))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceModelDataVaksin))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/TrackingVaksinServices/ServiceModelDataVaksin.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceModelDataVaksinClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceModelDataVaksin);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceModelDataVaksinClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceModelDataVaksin);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceModelDataVaksin,
        }
    }
}
