//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceBPOM
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceBPOM.IServiceBPOM")]
    public interface IServiceBPOM
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBPOM/RegistrasiVaksin", ReplyAction="http://tempuri.org/IServiceBPOM/RegistrasiVaksinResponse")]
        ServiceBPOM.RegistrasiVaksinResponse RegistrasiVaksin(ServiceBPOM.RegistrasiVaksinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBPOM/RegistrasiVaksin", ReplyAction="http://tempuri.org/IServiceBPOM/RegistrasiVaksinResponse")]
        System.Threading.Tasks.Task<ServiceBPOM.RegistrasiVaksinResponse> RegistrasiVaksinAsync(ServiceBPOM.RegistrasiVaksinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBPOM/LaporKedatanganVaksin", ReplyAction="http://tempuri.org/IServiceBPOM/LaporKedatanganVaksinResponse")]
        ServiceBPOM.LaporKedatanganVaksinResponse LaporKedatanganVaksin(ServiceBPOM.LaporKedatanganVaksinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBPOM/LaporKedatanganVaksin", ReplyAction="http://tempuri.org/IServiceBPOM/LaporKedatanganVaksinResponse")]
        System.Threading.Tasks.Task<ServiceBPOM.LaporKedatanganVaksinResponse> LaporKedatanganVaksinAsync(ServiceBPOM.LaporKedatanganVaksinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBPOM/LaporPenggunaanVaksin", ReplyAction="http://tempuri.org/IServiceBPOM/LaporPenggunaanVaksinResponse")]
        ServiceBPOM.LaporPenggunaanVaksinResponse LaporPenggunaanVaksin(ServiceBPOM.LaporPenggunaanVaksinRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBPOM/LaporPenggunaanVaksin", ReplyAction="http://tempuri.org/IServiceBPOM/LaporPenggunaanVaksinResponse")]
        System.Threading.Tasks.Task<ServiceBPOM.LaporPenggunaanVaksinResponse> LaporPenggunaanVaksinAsync(ServiceBPOM.LaporPenggunaanVaksinRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegistrasiVaksin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegistrasiVaksinRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Tracking_Vaksin_Services.DataVaksin Vaksin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public RegistrasiVaksinRequest()
        {
        }
        
        public RegistrasiVaksinRequest(Tracking_Vaksin_Services.DataVaksin Vaksin, int StatusCode, string Message)
        {
            this.Vaksin = Vaksin;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RegistrasiVaksinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RegistrasiVaksinResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool RegistrasiVaksinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public RegistrasiVaksinResponse()
        {
        }
        
        public RegistrasiVaksinResponse(bool RegistrasiVaksinResult, int StatusCode, string Message)
        {
            this.RegistrasiVaksinResult = RegistrasiVaksinResult;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LaporKedatanganVaksin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LaporKedatanganVaksinRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string NoRegistrasiVaksin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public LaporKedatanganVaksinRequest()
        {
        }
        
        public LaporKedatanganVaksinRequest(string NoRegistrasiVaksin, int StatusCode, string Message)
        {
            this.NoRegistrasiVaksin = NoRegistrasiVaksin;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LaporKedatanganVaksinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LaporKedatanganVaksinResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool LaporKedatanganVaksinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public LaporKedatanganVaksinResponse()
        {
        }
        
        public LaporKedatanganVaksinResponse(bool LaporKedatanganVaksinResult, int StatusCode, string Message)
        {
            this.LaporKedatanganVaksinResult = LaporKedatanganVaksinResult;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LaporPenggunaanVaksin", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LaporPenggunaanVaksinRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string NoRegistrasiVaksin;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public string NIK;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int JumlahPakai;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=4)]
        public string Message;
        
        public LaporPenggunaanVaksinRequest()
        {
        }
        
        public LaporPenggunaanVaksinRequest(string NoRegistrasiVaksin, string NIK, int JumlahPakai, int StatusCode, string Message)
        {
            this.NoRegistrasiVaksin = NoRegistrasiVaksin;
            this.NIK = NIK;
            this.JumlahPakai = JumlahPakai;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LaporPenggunaanVaksinResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class LaporPenggunaanVaksinResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool LaporPenggunaanVaksinResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int StatusCode;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public string Message;
        
        public LaporPenggunaanVaksinResponse()
        {
        }
        
        public LaporPenggunaanVaksinResponse(bool LaporPenggunaanVaksinResult, int StatusCode, string Message)
        {
            this.LaporPenggunaanVaksinResult = LaporPenggunaanVaksinResult;
            this.StatusCode = StatusCode;
            this.Message = Message;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IServiceBPOMChannel : ServiceBPOM.IServiceBPOM, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ServiceBPOMClient : System.ServiceModel.ClientBase<ServiceBPOM.IServiceBPOM>, ServiceBPOM.IServiceBPOM
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceBPOMClient() : 
                base(ServiceBPOMClient.GetDefaultBinding(), ServiceBPOMClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IServiceBPOM.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceBPOMClient(EndpointConfiguration endpointConfiguration) : 
                base(ServiceBPOMClient.GetBindingForEndpoint(endpointConfiguration), ServiceBPOMClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceBPOMClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceBPOMClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceBPOMClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceBPOMClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceBPOMClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceBPOM.RegistrasiVaksinResponse ServiceBPOM.IServiceBPOM.RegistrasiVaksin(ServiceBPOM.RegistrasiVaksinRequest request)
        {
            return base.Channel.RegistrasiVaksin(request);
        }
        
        public bool RegistrasiVaksin(Tracking_Vaksin_Services.DataVaksin Vaksin, ref int StatusCode, ref string Message)
        {
            ServiceBPOM.RegistrasiVaksinRequest inValue = new ServiceBPOM.RegistrasiVaksinRequest();
            inValue.Vaksin = Vaksin;
            inValue.StatusCode = StatusCode;
            inValue.Message = Message;
            ServiceBPOM.RegistrasiVaksinResponse retVal = ((ServiceBPOM.IServiceBPOM)(this)).RegistrasiVaksin(inValue);
            StatusCode = retVal.StatusCode;
            Message = retVal.Message;
            return retVal.RegistrasiVaksinResult;
        }
        
        public System.Threading.Tasks.Task<ServiceBPOM.RegistrasiVaksinResponse> RegistrasiVaksinAsync(ServiceBPOM.RegistrasiVaksinRequest request)
        {
            return base.Channel.RegistrasiVaksinAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceBPOM.LaporKedatanganVaksinResponse ServiceBPOM.IServiceBPOM.LaporKedatanganVaksin(ServiceBPOM.LaporKedatanganVaksinRequest request)
        {
            return base.Channel.LaporKedatanganVaksin(request);
        }
        
        public bool LaporKedatanganVaksin(string NoRegistrasiVaksin, ref int StatusCode, ref string Message)
        {
            ServiceBPOM.LaporKedatanganVaksinRequest inValue = new ServiceBPOM.LaporKedatanganVaksinRequest();
            inValue.NoRegistrasiVaksin = NoRegistrasiVaksin;
            inValue.StatusCode = StatusCode;
            inValue.Message = Message;
            ServiceBPOM.LaporKedatanganVaksinResponse retVal = ((ServiceBPOM.IServiceBPOM)(this)).LaporKedatanganVaksin(inValue);
            StatusCode = retVal.StatusCode;
            Message = retVal.Message;
            return retVal.LaporKedatanganVaksinResult;
        }
        
        public System.Threading.Tasks.Task<ServiceBPOM.LaporKedatanganVaksinResponse> LaporKedatanganVaksinAsync(ServiceBPOM.LaporKedatanganVaksinRequest request)
        {
            return base.Channel.LaporKedatanganVaksinAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ServiceBPOM.LaporPenggunaanVaksinResponse ServiceBPOM.IServiceBPOM.LaporPenggunaanVaksin(ServiceBPOM.LaporPenggunaanVaksinRequest request)
        {
            return base.Channel.LaporPenggunaanVaksin(request);
        }
        
        public bool LaporPenggunaanVaksin(string NoRegistrasiVaksin, string NIK, int JumlahPakai, ref int StatusCode, ref string Message)
        {
            ServiceBPOM.LaporPenggunaanVaksinRequest inValue = new ServiceBPOM.LaporPenggunaanVaksinRequest();
            inValue.NoRegistrasiVaksin = NoRegistrasiVaksin;
            inValue.NIK = NIK;
            inValue.JumlahPakai = JumlahPakai;
            inValue.StatusCode = StatusCode;
            inValue.Message = Message;
            ServiceBPOM.LaporPenggunaanVaksinResponse retVal = ((ServiceBPOM.IServiceBPOM)(this)).LaporPenggunaanVaksin(inValue);
            StatusCode = retVal.StatusCode;
            Message = retVal.Message;
            return retVal.LaporPenggunaanVaksinResult;
        }
        
        public System.Threading.Tasks.Task<ServiceBPOM.LaporPenggunaanVaksinResponse> LaporPenggunaanVaksinAsync(ServiceBPOM.LaporPenggunaanVaksinRequest request)
        {
            return base.Channel.LaporPenggunaanVaksinAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceBPOM))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceBPOM))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/TrackingVaksinServices/ServiceBPOM.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ServiceBPOMClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IServiceBPOM);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ServiceBPOMClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IServiceBPOM);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IServiceBPOM,
        }
    }
}
